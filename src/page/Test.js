/* eslint-disable */
import React, {useState} from 'react';
import styled from 'styled-components'

const Test = () => {

    const [subTitle, setSubTitle] = useState(['ÌïòÏ≤¥ Ïö¥Îèô', 'Í∞ÄÏä¥ Ïö¥Îèô', 'Ïñ¥Íπ® Ïö¥Îèô'])
    const [like, setLike] = useState([]);
    // mapÏúºÎ°ú Îç∞Ïù¥ÌÑ∞Î•º ÎèåÎ¶¥Îïå Í∞ÅÍ∞ÅÏùò stateÍ∞íÏùÑ Í¥ÄÎ¶¨ÌïòÍ≥†Ïûê Î∞∞Ïó¥Î°ú ÎîîÌè¥Ìä∏ Í∞íÏùÑ ÎÑ£Ïñ¥Ï£ºÍ≥† ÌÅ¥Î¶≠Ìï®ÏàòÎ•º ÎßåÎì§ÏóàÎã§.
    const [active, setActive] = useState(false);
    // Î™®Îã¨ ÌôúÏÑ±Ìôî ÎπÑÌôúÏÑ±ÌôîÎ•º ÎßåÎì§Í≥†Ïûê defalut Í∞íÏùÑ falseÎ°ú ÏßÄÏ†ïÌï¥Ï£ºÍ≥† ÎàÑÎ•º ÎïåÎßàÎã§ Ìï≠ÏÉÅ Î∞òÎåÄÍ∞Ä ÎêòÎèÑÎ°ù
    // ÌïòÏòÄÎã§.(setActive(!active))
    const [clickTitle, setClickTitle] = useState(0);

    // input ÏûÖÎ†• Í∞íÏùÑ stateÏóê Ï†ÄÏû•
    const [inputValue, setInputValue] = useState('')

    const modal = ['Î°úÍ∑∏Ïù∏', 'Î°úÍ∑∏ÏïÑÏõÉ', 'ÌîÑÎ°úÌïÑ'];

    // Î∂àÎ≥ÄÏÑ± ÎïåÎ¨∏Ïóê ÏõêÎ≥∏Îç∞Ïù¥ÌÑ∞Îäî Í±¥ÎìúÎ¶¨Î©¥ ÏïàÎêòÎØÄÎ°ú like ÏõêÎ≥∏ Î∞∞Ïó¥ÏùÑ Ïä§ÌîÑÎ†àÎìú Î¨∏Î≤ïÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ ÏÉàÎ°úÏö¥ Î≥ÄÏàòÏóê Îã¥ÏïÑÏ£ºÍ≥† ÌÅ¥Î¶≠Ìï†ÎïåÎßàÎã§ Í∞Å
    // indexÏùò Í∞íÏóê +1Ïù¥ ÎêòÎèÑÎ°ù ÌïòÍ≥† setLikeÏóê Îã¥ÏïÑÏ£ºÏóàÎã§. Í∑∏Îüº ÌïúÎ≤à ÎàåÎ¶¥ÎïåÎßàÎã§ likeÏóê +1Ïù¥ Îêú Í∞íÏù¥ Îã¥Í∏∏ Í≤É Ïù¥Îã§.
    const likeClick = (i) => {
        const newLikeClick = [...like,0];
        newLikeClick[i] += 1;
        setLike(newLikeClick);
    }

    // ÎÇ¥Í∞Ä Ìïú Î∞©Î≤ï
    // e.target.valueÏùò Í∞íÏùÑ stateÏóê Ï†ÄÏû•ÌïúÎí§ Ïä§ÌîÑÎ†àÎìú Î¨∏Î≤ïÏúºÎ°ú ÏõêÎ≥∏ Î∞∞Ïó¥Í≥º ÏûÖÎ†•Îêú state Í∞íÏùÑ Í∞ôÏùÄ Î∞∞Ïó¥Î°ú ÏàòÏ†ïÌï¥ Ï£ºÍ≥† setSubTitleÏóê 
    // ÏÉàÎ°úÎßåÎì† Î≥ÄÏàòÎ•º Ïç®Ï£ºÏóàÎã§.
    const storeClick = () =>{
        const newStoreClick = [...subTitle,inputValue]
        setSubTitle(newStoreClick)
    }

    // unshift()Î¨∏Î≤ïÏùÑ ÏÇ¨Ïö©Ìïú Î∞©Î≤ï (array Îß® ÏïûÏóê ÏûêÎ£åÎ•º Ï∂îÍ∞ÄÌïòÎäî Î¨∏Î≤ïÏûÑ)
    const storeClick1 = () =>{
        const newStoreClick = [...subTitle]
        newStoreClick.unshift(inputValue)
        setSubTitle(newStoreClick)
    }


    return (
        <Wrap>
            <div className='black-nav'>
                <div className='title-name'>
                    Í∞úÎ∞ú blog
                </div>
            </div>
            {
                subTitle.map((sb, i) => {
                    return (
                        <div className='sub-title'>
                            <h3
                                onClick={() => {
                                    setClickTitle(i)
                                }}>{sb}
                                <span
                                    className='like-btn'
                                    onClick={()=>{
                                        likeClick(i)
                                    }
                                    }>üëç</span>
                                {like[i]}
                            </h3>
                            <p>2Ïõî 20Ïùº</p>
                            <hr/>
                        </div>
                    )
                })
            }
            {/* <button
                onClick={() => {
                    setClickTitle(0)
                }}>Î≤ÑÌäº1</button>
            <button
                onClick={() => {
                    setClickTitle(1)
                }}>Î≤ÑÌäº2</button>
            <button
                onClick={() => {
                    setClickTitle(2)
                }}>Î≤ÑÌäº3</button>
            <hr/> */}


            
            {/* <input onChange={(e)=>{setInputValue(e.target.value)}}/> */}

            
            <div className='value-store'>
                <input className='value-input' onChange={(e)=>{setInputValue(e.target.value)}}/>
                <button onClick={storeClick}> Ï†ÄÏû•1 </button>
            </div>

            
            <div className='value-store'>
                <input className='value-input' onChange={(e)=>{setInputValue(e.target.value)}}/>
                <button onClick={storeClick1}> Ï†ÄÏû•2 </button>
            </div>



            <button
                className='button-wrap'
                onClick={() => {
                    setActive(!active)
                }}>Î≤ÑÌäºÏûÖÎãàÎã§</button>
            {
                active && <div className='footer-wrap'>
                        <h2>{subTitle[clickTitle]}</h2>
                        {
                            modal.map((mo, i) => {
                                return (
                                    <p
                                        className='footer-mo'
                                        key={i}
                                        onClick={() => {
                                            setActive(!active)
                                        }}>
                                        {mo}
                                    </p>
                                )
                            })
                        }
                    </div>
            }
        </Wrap>
    );
};

export default Test;

const Wrap = styled.div `
 .black-nav{
     background-color: black;
     width: 100%;
     display: flex;
     color: white;
     padding: 20px;
     font-weight: bold;
     font-size: 20px;
     .title-name{
         color: coral;
         font-size: 20px;
     }
 }
 .sub-title{
     .like-btn{
         cursor: pointer;
     }
     h3{
         text-align: left;
     }
     p{
         text-align: left;
     }
 } 
 .footer-wrap{
     margin: 0 auto;
     margin-top: 20px;
     border: 1px solid gray;
     width: 200px;
     border-radius: 5px;
     .footer-mo{
         width: 100%;
         height: 25px;
         cursor: pointer;
         &:hover{
             color: white;
             background-color: coral;
         }
     }
    }
    .value-store{
        display: flex;
        flex-direction: column;
        align-items: center;
        .value-input{
            width: 250px;
            height: 30px;
            margin-bottom: 5px;
            outline: none;
        }
        button{
            margin-bottom: 20px;
            border: 1px solid coral;
            background-color: coral;
            color: yellow;
            cursor: pointer;
            &:hover{
                background-color: yellow;
                color: coral;
            }
        }
    }
    .button-wrap{
     display: block;
     margin: auto;
     background-color: coral;
     border: 1px solid coral;
     border-radius: 2px;
     color: yellow;
     cursor: pointer;
     &:hover{
     background-color: yellow;
     color: coral;
 }
 }
`